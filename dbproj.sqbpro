<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Development/japanese-dictionary/jmdict.sqlite"/><window><current_tab id="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1057"/><expanded_item id="0" parent="-1"/><expanded_item id="1" parent="-1"/><expanded_item id="2" parent="-1"/><expanded_item id="3" parent="-1"/></tab_structure><tab_browse><current_table name="kanjis"/><default_encoding codec=""/><browsetable_info data="AAAABgAAABIAdwBvAHIAZABjAG8AdQBuAHQAAAACAAAAAQAAAAAAAAAAAAAAAAD/////AAAAGABtAGUAYQBuAGkAbgBnAHMAXwBmAHQAcwUhjeAAAAJIAAAAAAAAAAAAAAAAAP////8AAAAQAG0AZQBhAG4AaQBuAGcAcwAAAAUAAAABAAAAAAAAAAAAAAAAAP////8AAAAYAG0AZQBhAG4AXwBjAG4AdABfAHQAbQBwAAAAAgAAAAAAAAAAAAAAAAAAAAAA/////wAAAAwAawBhAG4AagBpAHMAAAAFAAAAAQAAAAAAAAAAAAAAAAD/////AAAAIABhAG4AZAByAG8AaQBkAF8AbQBlAHQAYQBkAGEAdABhbCy18AAAAkgAAAAAAAAAAAAAAAAA/////w=="/></tab_browse><tab_sql><sql name="SQL 1">SELECT * from kanjis
WHERE ent_seq IN( SELECT ent_seq FROM meanings WHERE meaning LIKE &quot;%ankommen&quot; )
ORDER BY num_occurences DESC;


SELECT * FROM meanings WHERE meaning = &quot;Gerüst&quot;

SELECT * FROM meanings WHERE meaning LIKE &quot;%Gerüst%&quot;
SELECT * FROM meanings_fts WHERE meaning MATCH &quot;Gerüst&quot;

SELECT matchinfo(meanings_fts),snippet(meanings_fts),offsets(meanings_fts), meaning, ent_seq FROM meanings_fts WHERE meaning MATCH &quot;Gerüst&quot;

SELECT matchinfo(meanings_fts), meaning, ent_seq FROM meanings_fts WHERE meaning MATCH &quot;test&quot;
SELECT offsets(meanings_fts), meaning FROM meanings_fts WHERE meaning MATCH &quot;test&quot;

SELECT * FROM meanings WHERE meaning LIKE &quot;%Gerüst%&quot;

DROP TABLE meanings_fts;
CREATE VIRTUAL TABLE meanings_fts USING fts4(_id INTEGER PRIMARY KEY, meaning TEXT, lang INTEGER, freq Integer);


SELECT _id, meaning, lang FROM meanings
GROUP BY meaning, lang;
JOIN meanings.meaning 


SELECT _id, meaning, lang FROM meanings_fts
ORDER BY length(meaning) DESC

SELECT _id, meaning, lang FROM meanings_fts
WHERE length(meaning) &gt; 26
ORDER BY length(meaning) ASC

DELETE FROM meanings_fts
WHERE length(meaning) &gt; 26

INSERT INTO meanings_fts(_id, meaning, lang, ent_seq ) VALUES(10, 'test', 1, 10);


CREATE TABLE meanings (_id INTEGER PRIMARY KEY, meaning TEXT, lang INTEGER, ent_seq INTEGER, FOREIGN KEY(lang) REFERENCES languages(_id) )


SELECT kana from kanas WHERE _id in(

            SELECT kana_id from kanjis k
            JOIN kanji_readings r ON k._id = r.kanji_id
            WHERE kanji='酷い' AND ent_seq='1602060'

SELECT COUNT(*)
FROM

Select misc FROM  misc m 
JOIN (Select misc_id from entry_misc WHERE ent_seq = '1001500' ) a ON a.misc_id = m._id



UPDATE kanjis SET num_occurences = num_occurences+1 WHERE kanji  = '仝'


SELECT _id,  meaning, count(meaning) as cnt FROM meanings WHERE meaning LIKE 'ka%'
group by meaning Order by cnt desc  LIMIT 10;

DROP TABLE meanings_index;
CREATE VIRTUAL TABLE meanings_index USING fts4(meaning, tokenize=porter);
INSERT INTO meanings_index SELECT meaning from meanings;

SELECT meaning, count(meaning) as cnt 
FROM meanings_index 
WHERE meaning match 'k*'
group by meaning Order by cnt desc LIMIT 10;


</sql><sql name="SQL 3">DROP TABLE meanings_suggestions;
CREATE  TABLE meanings_suggestions (_id INTEGER PRIMARY KEY, meaning TEXT, lang INTEGER, freq Integer);
CREATE INDEX meanings_suggestions_ix ON meanings_suggestions(meaning, lang)



ALTER TABLE meanings ADD COLUMN num_occurences INTEGER;

DROP TABLE wordcount;
CREATE TABLE IF NOT EXISTS wordcount(
  word TEXT PRIMARY KEY,
  cnt INTEGER
) ;
INSERT INTO wordcount  SELECT * FROM(SELECT meaning, SUM(num_occurences) FROM meanings group by meaning);
CREATE INDEX wordcountidx ON wordcount(word);

CREATE VIRTUAL TABLE meanings_fts USING fts3(meaning TEXT collate nocase,lang INTEGER);
INSERT INTO meanings_fts  SELECT* FROM(SELECT meaning, lang FROM meanings);

DROP TABLE meanings_new;
CREATE TABLE meanings_new (_id INTEGER PRIMARY KEY, meaning TEXT collate nocase, lang INTEGER, ent_seq INTEGER, num_occurences INTEGER, FOREIGN KEY(lang) REFERENCES languages(_id) );
INSERT INTO meanings_new  SELECT* FROM(SELECT * FROM meanings where num_occurences &gt; 1);

DROP INDEX meanings_new_ent_seqs;
CREATE INDEX meanings_new_ent_seqs ON meanings_new(meaning, num_occurences);   --- PERFORMANCE COMPOUND INDEX

CREATE INDEX meanings_index ON meanings(meaning, num_occurences);
CREATE INDEX meanings_index1 ON meanings(meaning);
CREATE INDEX meanings_index2 ON meanings(num_occurences);

CREATE INDEX meanings_new_ent_seqs ON meanings_new(meaning);
CREATE INDEX meanings_new_ent_seqs ON meanings_new(num_occurences)

DROP TABLE mean_cnt_tmp
CREATE TABLE mean_cnt_tmp (_id INTEGER PRIMARY KEY,  num_occurences INTEGER )

INSERT INTO mean_cnt_tmp
SELECT* FROM(SELECT _id,  count(meaning) as cnt
 FROM meanings
group by meaning)

INSERT INTO meanings_new
SELECT* FROM(
SELECT a._id, a.meaning, a.lang, a.ent_seq, b.num_occurences
FROM meanings a 
LEFT OUTER JOIN mean_cnt_tmp b ON b._id=a._id)

delete from meanings;
Insert into meanings select *  from meanings_new;

CREATE INDEX meaning_occurences ON meanings(num_occurences)

SELECT _id, meaning , count(meaning) as cnt
 FROM meanings
group by meaning

SELECT _id, meaning 
 FROM meanings WHERE meaning LIKE &quot;b%&quot;
 LIMIT 10



SELECT _id, meaning , count(meaning) as cnt
 FROM meanings WHERE meaning LIKE &quot;b%&quot;
group by meaning Order by cnt desc LIMIT 10


SELECT _id, meaning , count(meaning) as cnt
 FROM meanings WHERE meaning LIKE &quot;b%&quot; 
group by meaning
 Order by cnt desc LIMIT 10

 SELECT meaning , count(meaning) as cnt
 FROM meanings_fts WHERE meaning MATCH  &quot;b%&quot; 
group by meaning
 Order by cnt desc LIMIT 10

 
 
 SELECT _id,  meaning, num_occurences as cnt
 FROM meanings_new WHERE meaning LIKE &quot;b%&quot;  and num_occurences &gt; 30 
 UNION ALL
SELECT _id,  meaning, num_occurences as cnt
 FROM meanings_new WHERE meaning LIKE &quot;b%&quot;  and num_occurences &gt; 1 
  UNION ALL
SELECT _id,  meaning, num_occurences as cnt
 FROM meanings_new WHERE meaning LIKE &quot;b%&quot; 
  ORDER BY num_occurences DESC LIMIT 10

  
  
  
   SELECT _id,  meaning, num_occurences as cnt
 FROM meanings WHERE meaning LIKE &quot;b%&quot;  and num_occurences &gt; 30 
 UNION ALL
SELECT _id,  meaning, num_occurences as cnt
 FROM meanings WHERE meaning LIKE &quot;b%&quot;  and num_occurences &gt; 1 
  UNION ALL
SELECT _id,  meaning, num_occurences as cnt
 FROM meanings WHERE meaning LIKE &quot;b%&quot; 
  ORDER BY num_occurences DESC 
  LIMIT 10

  



 SELECT _id,  meaning, num_occurences
  FROM meanings 
 WHERE num_occurences &gt; 1 and meaning LIKE &quot;b%&quot;
 LIMIT 10

  SELECT _id,  meaning, num_occurences
  FROM meanings_new
 WHERE num_occurences  &gt; 12 and meaning LIKE &quot;b%&quot;
 LIMIT 10
 
SELECT _id, meaning , count(meaning) as cnt
 FROM meanings
group by meaning Order by cnt desc LIMIT 10

INSERT INTO meanings_suggestions
SELECT mean._id, mean.meaning, mean.lang, freq.freq FROM meanings AS mean JOIN germ_freq
AS freq ON mean.meaning=freq.text 
WHERE lang = 1
GROUP BY meaning, lang;</sql><sql name="SQL 4">SELECT COUNT (*) FROM kanjis

SELECT COUNT (*) FROM kanjis
WHERE num_occurences != 0


CREATE INDEX nu on kanjis(num_occurences)

SELECT COUNT (*) FROM kanjis
WHERE num_occurences &gt; (SELECT MAX(num_occurences) FROM kanjis WHERE ent_seq = 1580555)


1023.0/58752.0



SELECT num_occurences+commonness  as val
FROM kanjis
WHERE kanji = &quot;超然&quot;
 
169000


--- commonness

SELECT COUNT (*) as cnt, (58000-COUNT (*))/(58000*1.0)  FROM kanjis
WHERE num_occurences+commonness &gt; (SELECT num_occurences+commonness  as val
FROM kanjis
WHERE kanji = &quot;超然&quot;)


SELECT COUNT (*) as cnt, (58000-COUNT (*))/(58000*1.0)  FROM kanjis
WHERE num_occurences+commonness &gt; (SELECT num_occurences+commonness  as val
FROM kanjis
WHERE kanji = &quot;店&quot;)

SELECT COUNT (*) as cnt, (58000-COUNT (*))/(58000*1.0)  FROM kanjis
WHERE num_occurences+commonness &gt; (SELECT num_occurences+commonness  as val
FROM kanjis
WHERE kanji = &quot;英緬戦争&quot;)


</sql><current_tab id="2"/></tab_sql></sqlb_project>
